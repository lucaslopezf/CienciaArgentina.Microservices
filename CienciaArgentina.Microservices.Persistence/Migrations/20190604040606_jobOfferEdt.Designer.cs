// <auto-generated />
using System;
using CienciaArgentina.Microservices.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CienciaArgentina.Microservices.Persistence.Migrations
{
    [DbContext(typeof(CienciaArgentinaDbContext))]
    [Migration("20190604040606_jobOfferEdt")]
    partial class jobOfferEdt
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.2-servicing-10034")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CienciaArgentina.Microservices.Entities.Identity.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AccessFailedCount");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken();

                    b.Property<DateTime?>("DateDeleted");

                    b.Property<string>("Email")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed");

                    b.Property<bool>("LockoutEnabled");

                    b.Property<DateTimeOffset?>("LockoutEnd");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash");

                    b.Property<string>("PhoneNumber");

                    b.Property<bool>("PhoneNumberConfirmed");

                    b.Property<string>("SecurityStamp");

                    b.Property<bool>("TwoFactorEnabled");

                    b.Property<string>("UserName")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("CienciaArgentina.Microservices.Entities.Models.Addresses.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Additionals");

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime?>("DateDeleted");

                    b.Property<string>("Department");

                    b.Property<string>("Latitude");

                    b.Property<int?>("LocalityId");

                    b.Property<string>("Longitude");

                    b.Property<string>("StreetName");

                    b.Property<string>("StreetNumber");

                    b.Property<string>("ZipCode");

                    b.HasKey("Id");

                    b.HasIndex("LocalityId");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("CienciaArgentina.Microservices.Entities.Models.Addresses.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime?>("DateDeleted");

                    b.Property<string>("Description");

                    b.Property<int?>("StateId");

                    b.HasKey("Id");

                    b.HasIndex("StateId");

                    b.ToTable("Cities");
                });

            modelBuilder.Entity("CienciaArgentina.Microservices.Entities.Models.Addresses.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime?>("DateDeleted");

                    b.Property<string>("Iso2");

                    b.Property<string>("Iso3");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("CienciaArgentina.Microservices.Entities.Models.Addresses.Locality", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CityId");

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime?>("DateDeleted");

                    b.Property<string>("Description");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("Localities");
                });

            modelBuilder.Entity("CienciaArgentina.Microservices.Entities.Models.Addresses.State", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CountryId");

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime?>("DateDeleted");

                    b.Property<string>("Description");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("States");
                });

            modelBuilder.Entity("CienciaArgentina.Microservices.Entities.Models.Commons.Position", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime?>("DateDeleted");

                    b.Property<string>("Description");

                    b.Property<string>("PositionName");

                    b.HasKey("Id");

                    b.ToTable("Positions");
                });

            modelBuilder.Entity("CienciaArgentina.Microservices.Entities.Models.Commons.Sex", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime?>("DateDeleted");

                    b.Property<string>("Description");

                    b.HasKey("Id");

                    b.ToTable("Sex");
                });

            modelBuilder.Entity("CienciaArgentina.Microservices.Entities.Models.Commons.SocialNetwork", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime?>("DateDeleted");

                    b.Property<int?>("DepartmentId");

                    b.Property<int?>("OrganizationId");

                    b.Property<string>("SocialNetworkName");

                    b.Property<string>("Url");

                    b.Property<string>("UserName");

                    b.Property<int?>("UserProfileId");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("OrganizationId");

                    b.HasIndex("UserProfileId");

                    b.ToTable("SocialNetworks");
                });

            modelBuilder.Entity("CienciaArgentina.Microservices.Entities.Models.Commons.Telephone", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AreaCode");

                    b.Property<int>("CountryCode");

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime?>("DateDeleted");

                    b.Property<int>("PhoneNumber");

                    b.Property<string>("Type");

                    b.Property<int?>("UserProfileId");

                    b.HasKey("Id");

                    b.HasIndex("UserProfileId");

                    b.ToTable("Telephones");
                });

            modelBuilder.Entity("CienciaArgentina.Microservices.Entities.Models.JobOffer.JobOffer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AcademicRequirements");

                    b.Property<string>("CareerState");

                    b.Property<string>("ContactEmail");

                    b.Property<DateTime>("DateCareerFinish");

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime?>("DateDeleted");

                    b.Property<string>("Description");

                    b.Property<DateTime>("DurationOffer");

                    b.Property<bool>("Experience");

                    b.Property<string>("ExperimentalModel");

                    b.Property<int?>("JobTypeId");

                    b.Property<int?>("OrganizationId");

                    b.Property<bool>("PresentationLetter");

                    b.Property<string>("ProjectManager");

                    b.Property<string>("ResearchTopics");

                    b.Property<decimal>("Salary");

                    b.Property<string>("Title");

                    b.Property<string>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("JobTypeId");

                    b.HasIndex("OrganizationId");

                    b.HasIndex("UserId");

                    b.ToTable("JobOffer");
                });

            modelBuilder.Entity("CienciaArgentina.Microservices.Entities.Models.JobOffer.JobOfferCandidate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CandidateNote");

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime?>("DateDeleted");

                    b.Property<decimal>("ExpectedSalary");

                    b.Property<string>("IntroductionLetter");

                    b.Property<int?>("JobOfferId");

                    b.Property<DateTime>("ReceivedDate");

                    b.Property<string>("State");

                    b.Property<int?>("UserCvId");

                    b.Property<string>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("JobOfferId");

                    b.HasIndex("UserCvId");

                    b.HasIndex("UserId");

                    b.ToTable("JobOfferCandidates");
                });

            modelBuilder.Entity("CienciaArgentina.Microservices.Entities.Models.JobOffer.JobOfferCandidateReferral", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime?>("DateDeleted");

                    b.Property<string>("Description");

                    b.Property<int?>("JobReferralId");

                    b.Property<string>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("JobReferralId");

                    b.HasIndex("UserId");

                    b.ToTable("JobOfferCandidateReferrals");
                });

            modelBuilder.Entity("CienciaArgentina.Microservices.Entities.Models.JobOffer.JobOfferUserLanguajeKnoweldge", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Condition");

                    b.Property<int?>("JobOfferId");

                    b.Property<int?>("UserLanguageKnowledgeId");

                    b.HasKey("Id");

                    b.HasIndex("JobOfferId");

                    b.HasIndex("UserLanguageKnowledgeId");

                    b.ToTable("JobOfferUserLanguajeKnoweldge");
                });

            modelBuilder.Entity("CienciaArgentina.Microservices.Entities.Models.JobOffer.JobReferral", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Company");

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime?>("DateDeleted");

                    b.Property<string>("Email");

                    b.Property<string>("LastName");

                    b.Property<string>("MiddleName");

                    b.Property<string>("Name");

                    b.Property<string>("Telephone");

                    b.HasKey("Id");

                    b.ToTable("JobReferrals");
                });

            modelBuilder.Entity("CienciaArgentina.Microservices.Entities.Models.JobOffer.Tag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime?>("DateDeleted");

                    b.Property<string>("Description");

                    b.HasKey("Id");

                    b.ToTable("Tags");
                });

            modelBuilder.Entity("CienciaArgentina.Microservices.Entities.Models.Organizations.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AddressId");

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime?>("DateDeleted");

                    b.Property<string>("Description");

                    b.Property<string>("Link");

                    b.Property<string>("Name");

                    b.Property<int?>("OrganizationId");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.HasIndex("OrganizationId");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("CienciaArgentina.Microservices.Entities.Models.Organizations.DepartmentProject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime?>("DateDeleted");

                    b.Property<int?>("DepartmentId");

                    b.Property<int?>("OrganizationProjectId");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("OrganizationProjectId");

                    b.ToTable("DepartmentProjects");
                });

            modelBuilder.Entity("CienciaArgentina.Microservices.Entities.Models.Organizations.Organization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Acronyms");

                    b.Property<int?>("AddressId");

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime?>("DateDeleted");

                    b.Property<string>("Description");

                    b.Property<string>("DescriptionLarge");

                    b.Property<string>("Initials");

                    b.Property<string>("Link");

                    b.Property<string>("Logo");

                    b.Property<string>("Name");

                    b.Property<int?>("OrganizationTypeId");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.HasIndex("OrganizationTypeId");

                    b.ToTable("Organizations");
                });

            modelBuilder.Entity("CienciaArgentina.Microservices.Entities.Models.Organizations.OrganizationProject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("About");

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime?>("DateDeleted");

                    b.Property<string>("ExperimentalModel");

                    b.Property<int?>("ResponsableId");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.HasIndex("ResponsableId");

                    b.ToTable("OrganizationProjects");
                });

            modelBuilder.Entity("CienciaArgentina.Microservices.Entities.Models.Organizations.OrganizationType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime?>("DateDeleted");

                    b.Property<string>("Description");

                    b.Property<decimal>("PayPlatform");

                    b.HasKey("Id");

                    b.ToTable("OrganizationTypes");
                });

            modelBuilder.Entity("CienciaArgentina.Microservices.Entities.Models.Organizations.Paper", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime?>("DateDeleted");

                    b.Property<string>("Link");

                    b.Property<string>("Magazine");

                    b.Property<int?>("PaperDepartmentId");

                    b.Property<string>("Title");

                    b.Property<int>("Year");

                    b.HasKey("Id");

                    b.HasIndex("PaperDepartmentId");

                    b.ToTable("Papers");
                });

            modelBuilder.Entity("CienciaArgentina.Microservices.Entities.Models.Organizations.PaperDepartment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime?>("DateDeleted");

                    b.Property<int?>("DeparmentId");

                    b.HasKey("Id");

                    b.HasIndex("DeparmentId");

                    b.ToTable("PaperDepartment");
                });

            modelBuilder.Entity("CienciaArgentina.Microservices.Entities.Models.User.JobType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime?>("DateDeleted");

                    b.Property<string>("Description");

                    b.Property<DateTime>("PublishDate");

                    b.HasKey("Id");

                    b.ToTable("JobTypes");
                });

            modelBuilder.Entity("CienciaArgentina.Microservices.Entities.Models.User.University", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AddressId");

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime?>("DateDeleted");

                    b.Property<string>("Name");

                    b.Property<string>("Url");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.ToTable("Universities");
                });

            modelBuilder.Entity("CienciaArgentina.Microservices.Entities.Models.User.UserCv", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime?>("DateDeleted");

                    b.Property<string>("UrlCv");

                    b.HasKey("Id");

                    b.ToTable("UserCv");
                });

            modelBuilder.Entity("CienciaArgentina.Microservices.Entities.Models.User.UserDepartment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime?>("DateDeleted");

                    b.Property<int?>("DepartmentId");

                    b.Property<int?>("PositionId");

                    b.Property<string>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("PositionId");

                    b.HasIndex("UserId");

                    b.ToTable("UserDepartments");
                });

            modelBuilder.Entity("CienciaArgentina.Microservices.Entities.Models.User.UserLanguage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime?>("DateDeleted");

                    b.Property<string>("Description");

                    b.HasKey("Id");

                    b.ToTable("UserLanguages");
                });

            modelBuilder.Entity("CienciaArgentina.Microservices.Entities.Models.User.UserLanguageKnowledge", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime?>("DateDeleted");

                    b.Property<int?>("UserLanguageId");

                    b.Property<int?>("UserProfileId");

                    b.HasKey("Id");

                    b.HasIndex("UserLanguageId");

                    b.HasIndex("UserProfileId");

                    b.ToTable("UserLanguagesKnowledge");
                });

            modelBuilder.Entity("CienciaArgentina.Microservices.Entities.Models.User.UserLanguageSkill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime?>("DateDeleted");

                    b.Property<string>("Description");

                    b.Property<int?>("UserLanguageKnowledgeId");

                    b.HasKey("Id");

                    b.HasIndex("UserLanguageKnowledgeId");

                    b.ToTable("UserLanguagesSkill");
                });

            modelBuilder.Entity("CienciaArgentina.Microservices.Entities.Models.User.UserOrganization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime?>("DateDeleted");

                    b.Property<int?>("OrganizationId");

                    b.Property<int?>("PositionId");

                    b.Property<string>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("OrganizationId");

                    b.HasIndex("PositionId");

                    b.HasIndex("UserId");

                    b.ToTable("UserOrganizations");
                });

            modelBuilder.Entity("CienciaArgentina.Microservices.Entities.Models.User.UserProfile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AddressId");

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("Date");

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime?>("DateDeleted");

                    b.Property<string>("Identifier");

                    b.Property<string>("IdentifierType");

                    b.Property<string>("LastName");

                    b.Property<string>("MiddleName");

                    b.Property<string>("Name");

                    b.Property<int?>("NationalityId");

                    b.Property<int?>("SexId");

                    b.Property<string>("UserId");

                    b.Property<int?>("UserOrganizationId");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.HasIndex("NationalityId");

                    b.HasIndex("SexId");

                    b.HasIndex("UserId");

                    b.HasIndex("UserOrganizationId");

                    b.ToTable("UserProfiles");
                });

            modelBuilder.Entity("CienciaArgentina.Microservices.Entities.Models.User.UserStudy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Additional");

                    b.Property<int?>("ApprovedSubjects");

                    b.Property<string>("Carrer");

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime?>("DateDeleted");

                    b.Property<string>("Institution");

                    b.Property<int?>("TotalSubjects");

                    b.Property<int?>("UniversityId");

                    b.Property<int?>("UserProfileId");

                    b.Property<int?>("UserStudyCompletionId");

                    b.Property<int?>("UserStudyTypeId");

                    b.HasKey("Id");

                    b.HasIndex("UniversityId");

                    b.HasIndex("UserProfileId");

                    b.HasIndex("UserStudyCompletionId");

                    b.HasIndex("UserStudyTypeId");

                    b.ToTable("UserStudies");
                });

            modelBuilder.Entity("CienciaArgentina.Microservices.Entities.Models.User.UserStudyCompletion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime?>("DateDeleted");

                    b.Property<string>("Description");

                    b.HasKey("Id");

                    b.ToTable("UserStudiesCompletion");
                });

            modelBuilder.Entity("CienciaArgentina.Microservices.Entities.Models.User.UserStudyType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime?>("DateDeleted");

                    b.Property<string>("Description");

                    b.HasKey("Id");

                    b.ToTable("UserStudyTypes");
                });

            modelBuilder.Entity("CienciaArgentina.Microservices.Entities.Models.User.WorkExperience", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Addittions");

                    b.Property<int?>("AddressId");

                    b.Property<string>("Charge");

                    b.Property<string>("Company");

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime?>("DateDeleted");

                    b.Property<string>("Description");

                    b.Property<int?>("UserProfileId");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.HasIndex("UserProfileId");

                    b.ToTable("WorkExperience");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken();

                    b.Property<string>("Name")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<string>("RoleId")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<string>("UserId")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider");

                    b.Property<string>("ProviderKey");

                    b.Property<string>("ProviderDisplayName");

                    b.Property<string>("UserId")
                        .IsRequired();

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId");

                    b.Property<string>("RoleId");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId");

                    b.Property<string>("LoginProvider");

                    b.Property<string>("Name");

                    b.Property<string>("Value");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("CienciaArgentina.Microservices.Entities.Models.Addresses.Address", b =>
                {
                    b.HasOne("CienciaArgentina.Microservices.Entities.Models.Addresses.Locality", "Locality")
                        .WithMany()
                        .HasForeignKey("LocalityId");
                });

            modelBuilder.Entity("CienciaArgentina.Microservices.Entities.Models.Addresses.City", b =>
                {
                    b.HasOne("CienciaArgentina.Microservices.Entities.Models.Addresses.State", "State")
                        .WithMany()
                        .HasForeignKey("StateId");
                });

            modelBuilder.Entity("CienciaArgentina.Microservices.Entities.Models.Addresses.Locality", b =>
                {
                    b.HasOne("CienciaArgentina.Microservices.Entities.Models.Addresses.City", "City")
                        .WithMany()
                        .HasForeignKey("CityId");
                });

            modelBuilder.Entity("CienciaArgentina.Microservices.Entities.Models.Addresses.State", b =>
                {
                    b.HasOne("CienciaArgentina.Microservices.Entities.Models.Addresses.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId");
                });

            modelBuilder.Entity("CienciaArgentina.Microservices.Entities.Models.Commons.SocialNetwork", b =>
                {
                    b.HasOne("CienciaArgentina.Microservices.Entities.Models.Organizations.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId");

                    b.HasOne("CienciaArgentina.Microservices.Entities.Models.Organizations.Organization", "Organization")
                        .WithMany()
                        .HasForeignKey("OrganizationId");

                    b.HasOne("CienciaArgentina.Microservices.Entities.Models.User.UserProfile", "UserProfile")
                        .WithMany()
                        .HasForeignKey("UserProfileId");
                });

            modelBuilder.Entity("CienciaArgentina.Microservices.Entities.Models.Commons.Telephone", b =>
                {
                    b.HasOne("CienciaArgentina.Microservices.Entities.Models.User.UserProfile")
                        .WithMany("Telephone")
                        .HasForeignKey("UserProfileId");
                });

            modelBuilder.Entity("CienciaArgentina.Microservices.Entities.Models.JobOffer.JobOffer", b =>
                {
                    b.HasOne("CienciaArgentina.Microservices.Entities.Models.User.JobType", "JobType")
                        .WithMany()
                        .HasForeignKey("JobTypeId");

                    b.HasOne("CienciaArgentina.Microservices.Entities.Models.Organizations.Organization", "Organization")
                        .WithMany()
                        .HasForeignKey("OrganizationId");

                    b.HasOne("CienciaArgentina.Microservices.Entities.Identity.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("CienciaArgentina.Microservices.Entities.Models.JobOffer.JobOfferCandidate", b =>
                {
                    b.HasOne("CienciaArgentina.Microservices.Entities.Models.JobOffer.JobOffer", "JobOffer")
                        .WithMany()
                        .HasForeignKey("JobOfferId");

                    b.HasOne("CienciaArgentina.Microservices.Entities.Models.User.UserCv", "UserCv")
                        .WithMany()
                        .HasForeignKey("UserCvId");

                    b.HasOne("CienciaArgentina.Microservices.Entities.Identity.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("CienciaArgentina.Microservices.Entities.Models.JobOffer.JobOfferCandidateReferral", b =>
                {
                    b.HasOne("CienciaArgentina.Microservices.Entities.Models.JobOffer.JobReferral", "JobReferral")
                        .WithMany()
                        .HasForeignKey("JobReferralId");

                    b.HasOne("CienciaArgentina.Microservices.Entities.Identity.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("CienciaArgentina.Microservices.Entities.Models.JobOffer.JobOfferUserLanguajeKnoweldge", b =>
                {
                    b.HasOne("CienciaArgentina.Microservices.Entities.Models.JobOffer.JobOffer", "JobOffer")
                        .WithMany()
                        .HasForeignKey("JobOfferId");

                    b.HasOne("CienciaArgentina.Microservices.Entities.Models.User.UserLanguageKnowledge", "UserLanguageKnowledge")
                        .WithMany()
                        .HasForeignKey("UserLanguageKnowledgeId");
                });

            modelBuilder.Entity("CienciaArgentina.Microservices.Entities.Models.Organizations.Department", b =>
                {
                    b.HasOne("CienciaArgentina.Microservices.Entities.Models.Addresses.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId");

                    b.HasOne("CienciaArgentina.Microservices.Entities.Models.Organizations.Organization", "Organization")
                        .WithMany()
                        .HasForeignKey("OrganizationId");
                });

            modelBuilder.Entity("CienciaArgentina.Microservices.Entities.Models.Organizations.DepartmentProject", b =>
                {
                    b.HasOne("CienciaArgentina.Microservices.Entities.Models.Organizations.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId");

                    b.HasOne("CienciaArgentina.Microservices.Entities.Models.Organizations.OrganizationProject", "OrganizationProject")
                        .WithMany()
                        .HasForeignKey("OrganizationProjectId");
                });

            modelBuilder.Entity("CienciaArgentina.Microservices.Entities.Models.Organizations.Organization", b =>
                {
                    b.HasOne("CienciaArgentina.Microservices.Entities.Models.Addresses.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId");

                    b.HasOne("CienciaArgentina.Microservices.Entities.Models.Organizations.OrganizationType", "OrganizationType")
                        .WithMany()
                        .HasForeignKey("OrganizationTypeId");
                });

            modelBuilder.Entity("CienciaArgentina.Microservices.Entities.Models.Organizations.OrganizationProject", b =>
                {
                    b.HasOne("CienciaArgentina.Microservices.Entities.Models.User.UserProfile", "Responsable")
                        .WithMany()
                        .HasForeignKey("ResponsableId");
                });

            modelBuilder.Entity("CienciaArgentina.Microservices.Entities.Models.Organizations.Paper", b =>
                {
                    b.HasOne("CienciaArgentina.Microservices.Entities.Models.Organizations.PaperDepartment", "PaperDepartment")
                        .WithMany()
                        .HasForeignKey("PaperDepartmentId");
                });

            modelBuilder.Entity("CienciaArgentina.Microservices.Entities.Models.Organizations.PaperDepartment", b =>
                {
                    b.HasOne("CienciaArgentina.Microservices.Entities.Models.Organizations.Department", "Deparment")
                        .WithMany()
                        .HasForeignKey("DeparmentId");
                });

            modelBuilder.Entity("CienciaArgentina.Microservices.Entities.Models.User.University", b =>
                {
                    b.HasOne("CienciaArgentina.Microservices.Entities.Models.Addresses.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId");
                });

            modelBuilder.Entity("CienciaArgentina.Microservices.Entities.Models.User.UserDepartment", b =>
                {
                    b.HasOne("CienciaArgentina.Microservices.Entities.Models.Organizations.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId");

                    b.HasOne("CienciaArgentina.Microservices.Entities.Models.Commons.Position", "Position")
                        .WithMany()
                        .HasForeignKey("PositionId");

                    b.HasOne("CienciaArgentina.Microservices.Entities.Identity.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("CienciaArgentina.Microservices.Entities.Models.User.UserLanguageKnowledge", b =>
                {
                    b.HasOne("CienciaArgentina.Microservices.Entities.Models.User.UserLanguage", "UserLanguage")
                        .WithMany()
                        .HasForeignKey("UserLanguageId");

                    b.HasOne("CienciaArgentina.Microservices.Entities.Models.User.UserProfile", "UserProfile")
                        .WithMany()
                        .HasForeignKey("UserProfileId");
                });

            modelBuilder.Entity("CienciaArgentina.Microservices.Entities.Models.User.UserLanguageSkill", b =>
                {
                    b.HasOne("CienciaArgentina.Microservices.Entities.Models.User.UserLanguageKnowledge", "UserLanguageKnowledge")
                        .WithMany()
                        .HasForeignKey("UserLanguageKnowledgeId");
                });

            modelBuilder.Entity("CienciaArgentina.Microservices.Entities.Models.User.UserOrganization", b =>
                {
                    b.HasOne("CienciaArgentina.Microservices.Entities.Models.Organizations.Organization", "Organization")
                        .WithMany()
                        .HasForeignKey("OrganizationId");

                    b.HasOne("CienciaArgentina.Microservices.Entities.Models.Commons.Position", "Position")
                        .WithMany()
                        .HasForeignKey("PositionId");

                    b.HasOne("CienciaArgentina.Microservices.Entities.Identity.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("CienciaArgentina.Microservices.Entities.Models.User.UserProfile", b =>
                {
                    b.HasOne("CienciaArgentina.Microservices.Entities.Models.Addresses.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId");

                    b.HasOne("CienciaArgentina.Microservices.Entities.Models.Addresses.Country", "Nationality")
                        .WithMany()
                        .HasForeignKey("NationalityId");

                    b.HasOne("CienciaArgentina.Microservices.Entities.Models.Commons.Sex", "Sex")
                        .WithMany()
                        .HasForeignKey("SexId");

                    b.HasOne("CienciaArgentina.Microservices.Entities.Identity.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.HasOne("CienciaArgentina.Microservices.Entities.Models.User.UserOrganization", "UserOrganization")
                        .WithMany()
                        .HasForeignKey("UserOrganizationId");
                });

            modelBuilder.Entity("CienciaArgentina.Microservices.Entities.Models.User.UserStudy", b =>
                {
                    b.HasOne("CienciaArgentina.Microservices.Entities.Models.User.University", "University")
                        .WithMany()
                        .HasForeignKey("UniversityId");

                    b.HasOne("CienciaArgentina.Microservices.Entities.Models.User.UserProfile", "UserProfile")
                        .WithMany()
                        .HasForeignKey("UserProfileId");

                    b.HasOne("CienciaArgentina.Microservices.Entities.Models.User.UserStudyCompletion", "UserStudyCompletion")
                        .WithMany()
                        .HasForeignKey("UserStudyCompletionId");

                    b.HasOne("CienciaArgentina.Microservices.Entities.Models.User.UserStudyType", "UserStudyType")
                        .WithMany()
                        .HasForeignKey("UserStudyTypeId");
                });

            modelBuilder.Entity("CienciaArgentina.Microservices.Entities.Models.User.WorkExperience", b =>
                {
                    b.HasOne("CienciaArgentina.Microservices.Entities.Models.Addresses.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId");

                    b.HasOne("CienciaArgentina.Microservices.Entities.Models.User.UserProfile")
                        .WithMany("WorkExperience")
                        .HasForeignKey("UserProfileId");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("CienciaArgentina.Microservices.Entities.Identity.ApplicationUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("CienciaArgentina.Microservices.Entities.Identity.ApplicationUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("CienciaArgentina.Microservices.Entities.Identity.ApplicationUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("CienciaArgentina.Microservices.Entities.Identity.ApplicationUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
